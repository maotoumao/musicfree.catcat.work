import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.ab515e0e.js";const u=JSON.parse('{"title":"内置的 npm 包","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"plugin/internal-pkgs.md","filePath":"plugin/internal-pkgs.md","lastUpdated":1750505982000}'),t={name:"plugin/internal-pkgs.md"},o=p(`<h1 id="内置的-npm-包" tabindex="-1">内置的 npm 包 <a class="header-anchor" href="#内置的-npm-包" aria-label="Permalink to &quot;内置的 npm 包&quot;">​</a></h1><p>APP 已经内置了一些 npm 包，以下包可以在插件中直接使用，而不需要把源码打包到最终的插件中。如果你有过 web 开发经验，你可以理解成以下包全都被设置成了 external：</p><table><thead><tr><th>npm 包名</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>crypto-js</td><td>4.4.1</td><td>加解密库</td></tr><tr><td>dayjs</td><td>1.11.4</td><td>日期时间处理库</td></tr><tr><td>axios</td><td>0.27.2</td><td>网络请求库</td></tr><tr><td>big-integer</td><td>1.6.51</td><td>大整型数据处理库</td></tr><tr><td>qs</td><td>6.11.0</td><td>参数序列化库</td></tr><tr><td>he</td><td>1.2.0</td><td>http 编码/解码库</td></tr><tr><td>cheerio</td><td>1.0.0-rc.12</td><td>http 文件解析库</td></tr><tr><td>webdav</td><td>5.3.1</td><td>处理 Webdav 的库</td></tr></tbody></table><p>举个例子：如果你需要在插件中使用 <code>axios</code>，你可以直接：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">axios</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;axios&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ... 插件实例对象</span></span>
<span class="line"><span style="color:#E1E4E8;">  platform: </span><span style="color:#9ECBFF;">&quot;插件名&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  version: </span><span style="color:#9ECBFF;">&quot;0.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">axios</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;axios&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ... 插件实例对象</span></span>
<span class="line"><span style="color:#24292E;">  platform: </span><span style="color:#032F62;">&quot;插件名&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  version: </span><span style="color:#032F62;">&quot;0.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>而假如你要在插件中使用 <code>lodash</code>，你不可以直接引入，也就是如果这样写是无效的：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lodash</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lodash&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lodash</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lodash&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>如果想使用类似 <code>lodash</code> 这种 APP 没有内置的包，你需要使用 <code>webpack</code> 或者其他工具把对应包的源码打到最终的插件中，此处不再赘述。</p>`,8),l=[o];function e(c,r,d,i,E,y){return a(),n("div",null,l)}const F=s(t,[["render",e]]);export{u as __pageData,F as default};
